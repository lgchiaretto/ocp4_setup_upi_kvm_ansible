---
# Configure DHCP reservations
- name: Adding master mac on DHCP when SNO
  community.libvirt.virt_net:
    name: "{{ kvmnetwork }}"
    command: modify
    xml: "<host mac='{{ master0infosno.stdout }}' ip='{{ master0ip.stdout_lines | first }}'/>"
  register: master0infosno_dhcp
  become: true
  when: sno == "true"

- name: Adding lb and masters mac on DHCP when 3-node
  community.libvirt.virt_net:
    name: "{{ kvmnetwork }}"
    command: modify
    xml: "<host mac='{{ item.mac }}' ip='{{ item.ip }}'/>"
  register: allmacsinfo
  become: true
  with_items:
    - { mac: "{{ lb_info.stdout }}", ip: "{{ lbvip.stdout_lines | first }}" }
    - { mac: "{{ master0info.stdout }}", ip: "{{ master0ip.stdout_lines | first }}" }
    - { mac: "{{ master1info.stdout }}", ip: "{{ master1ip.stdout_lines | first }}" }
    - { mac: "{{ master2info.stdout }}", ip: "{{ master2ip.stdout_lines | first }}" }
  when: sno == "false"
  ignore_errors: true

- name: Copy haproxy.cfg to lb
  ansible.builtin.template:
    src: "haproxy.cfg-kvm.j2"
    dest: "/etc/haproxy/haproxy.cfg"
    mode: "0644"
  delegate_to: "{{ lbvip.stdout_lines | first }}"
  remote_user: "root"
  when: sno == "false"

- name: Restart haproxy on LB
  ansible.builtin.systemd:
    name: haproxy
    state: restarted
    enabled: false
  delegate_to: "{{ lbvip.stdout_lines | first }}"
  remote_user: "root"
  when: sno == "false"

- name: Waiting for RHCOS Installation to finish on bootstrap
  ansible.builtin.shell: "virsh list --name |  { grep -E '{{ clustername }}-master|{{ clustername }}-worker|{{ clustername }}-bootstrap' || true; }"
  retries: 600
  delay: 5
  become: true
  register: vms
  until: vms.stdout == ""
  when: sno == "false"
