---
# Create VM disks
- name: Create virtual machines disks when SNO
  block:
    - name: Create primary disk
      ansible.builtin.command: "qemu-img create -f qcow2 {{ clustername }}-master-0.qcow2 120G"
      args:
        chdir: "{{ clusters_dir }}/{{ clustername }}"
      register: qcow2master
      changed_when: true
    - name: Create extra disks
      ansible.builtin.command: "qemu-img create -f qcow2 {{ clustername }}-extra-disk-{{ item }}.qcow2 {{ extra_disk_size }}G"
      args:
        chdir: "{{ clusters_dir }}/{{ clustername }}"
      loop: "{{ range(1, extra_disks + 1) }}"
      when: extra_disks > 0
      register: extra_disks_result
      changed_when: true
  when: sno == "true"

- name: Create virtual machines disks when 3 node cluster
  ansible.builtin.copy:
    remote_src: true
    src: "{{ clusters_dir }}/{{ clustername }}/rhcos-install/rhcos-qemu.x86_64.qcow2"
    dest: "{{ clusters_dir }}/{{ clustername }}/{{ item }}.qcow2"
  with_items:
    - "bootstrap"
    - "master-0"
    - "master-1"
    - "master-2"
  when: sno == "false"

- name: Create extra disks on masters when installodf is true
  ansible.builtin.command: "qemu-img create -o preallocation=falloc -f qcow2 {{ clustername }}-{{ item }}-extra-disk.qcow2 {{ extra_disk_size }}G"
  args:
    chdir: "{{ clusters_dir }}/{{ clustername }}"
  loop:
    - "master-0"
    - "master-1"
    - "master-2"
  register: extra_disks_result
  become: true
  changed_when: true
  when: installodf == "true" and sno == "false"

- name: Create worker disks
  ansible.builtin.command: "qemu-img create -f qcow2 {{ clustername }}-worker-{{ item }}.qcow2 120G"
  args:
    chdir: "{{ clusters_dir }}/{{ clustername }}"
  with_sequence: count={{ n_worker }} start=0
  changed_when: true
  when: n_worker != 0
